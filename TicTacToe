import java.lang.Integer;
import java.util.*;


public class TicTacToe {

   private String[] data = new String[9];

   private static char SYMBOL_O = 'O';
   private static char SYMBOL_X = 'X';
   private static int  moveCount = 0;
   


   private int moveCounter = 0; 

   public void initialize() {

      for(int i=0; i< data.length; i++) {
          data[i] = String.valueOf(i+1);
      }
   }

   public void print() {

      for(int i=0; i< data.length; i++) {
          System.out.print('|');
          if( ( (i+1) % 3 ) == 0 ) {
             System.out.println(data[i] + '|');
          } else {
             System.out.print(data[i]);
          }
      }
   }

   private void move(int i, String ch) {
      data[i-1] = ch;
   }


   /**
     * Check if the move is valid
   **/
   private boolean check(int i) {
     
       //bounds check 
       if(i <1 || i > 9) {
          System.out.println("Please select a valid slot");
          return false;
       }


       //check if position is taken
       int position = i-1;

       if(data[position] == "X" || data[position] == "O") {
          System.out.println("Please select a valid unused slot");
          return false;
       }


       System.out.println(i);  
       return true;
   }

  
   private boolean isGameOver(int player) {
       //check the following

       //any 3 adjacent squares are the same
       //same but vertical
       //2 diagonals

      /*
        |0|1|2|
        |3|4|5|
        |6|7|8|
       */

       //check horizontal
       if( (data[1] == data[0]) && (data[2] == data[0]) ) {
          System.out.println("Player " + player + " won");
          return true; 
       }

       if( (data[3] == data[4]) && (data[5] == data[4]) ) {
          System.out.println("Player " + player + " won");
          return true; 
       }

       if( (data[7] == data[6]) && (data[8] == data[7]) ) {
          System.out.println("Player " + player + " won");
          return true; 
       }



       //vertical checks
       if( (data[0] == data[3]) && (data[6] == data[3]) ) {
          System.out.println("Player " + player + " won");
          return true; 
       }

       if( (data[1] == data[4]) && (data[1] == data[7]) ) {
          System.out.println("Player " + player + " won");
          return true; 
       }

       if( (data[2] == data[5]) && (data[8] == data[2]) ) {
          System.out.println("Player " + player + " won");
          return true; 
       }       



       //2 diagonal checks
       if( (data[0] == data[4]) && (data[8] == data[0]) ) {
          System.out.println("Player " + player + " won");
          return true; 
       }

       if( (data[2] == data[4]) && (data[6] == data[4]) ) {
          System.out.println("Player " + player + " won");
          return true; 
       }


       //check if all slots are taken by O or X in which case its a draw & return true
       if(moveCount == 5) {
          System.out.println("The game is a draw..");
          return true;
       } 
               
       
       
       

       return false;
   }

  
   public void play() {

       this.initialize();

       int player = 1;

       Scanner keyboard = new Scanner(System.in);

       while(true) {
         this.print();

         System.out.println("Player " + player + ". Select a number to make a move or q to quit");
         String choice = keyboard.nextLine();

         if(choice.equalsIgnoreCase("q")) {
           break;
         }else{
           try {
              int pos = Integer.valueOf(choice.trim());
              boolean status = check(pos);
           
              if(status) {
                if(player == 1) {
                   this.move(pos, "X");
                   moveCount++;
                   //now check if the game is over or still in play
                   if(isGameOver(player)) {
                     System.out.println("Game Over");  //print what player or if its a draw
                     break;
                   } 
            player++;
                 } else {
                   this.move(pos, "O");
                   if(isGameOver(player)) {
                     System.out.println("Game Over");  //print what player or if its a draw
                     break;
                   } 
                   player = 1;
                }
   
              } 
           }catch(NumberFormatException e) {
           } 
         }
         
       } //while

       this.print();       
   }



   public static void main(String[] args) {

      TicTacToe tictactoe = new TicTacToe();
  
      tictactoe.play();

     

   }

}
